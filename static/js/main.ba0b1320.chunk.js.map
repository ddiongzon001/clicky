{"version":3,"sources":["components/Picture/index.js","components/Wrapper/index.js","components/NavBar/index.js","components/Header/index.js","App.js","index.js"],"names":["Picture","props","className","onClick","userClick","alt","id","src","image","Wrapper","children","NavBar","score","topScore","Header","App","state","pokemons","clicked","reset","setState","setTop","randomize","sort","a","b","Math","random","event","preventDefault","clickedOn","target","inGuessed","indexOf","console","log","concat","this","map","pokemon","key","Component","ReactDOM","render","document","getElementById"],"mappings":"qhCAYeA,MARf,SAAiBC,GACf,OACE,yBAAKC,UAAU,OAAOC,QAASF,EAAMG,WACjC,yBAAKC,IAAKJ,EAAMK,GAAIC,IAAKN,EAAMO,U,MCAxBC,MAJf,SAAiBR,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMS,W,MCS1BC,MATf,SAAgBV,GAEd,OACE,yBAAKC,UAAU,iCACb,wBAAIA,UAAU,SAAd,0BACA,wBAAIA,UAAU,SAAd,UAA8BD,EAAMW,MAApC,iBAAyDX,EAAMY,Y,MCItDC,MAVf,WACI,OACI,yBAAKZ,UAAU,6BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,2BACA,uBAAGA,UAAU,QAAb,4E,OCmFDa,E,2MAlFbC,MAAQ,CACNC,WACAC,QAAS,GACTN,MAAO,EACPC,SAAU,G,EAKZM,MAAQ,WACN,EAAKC,SAAS,CACZR,MAAO,EACPM,QAAS,M,EAKbG,OAAS,WACQ,EAAKL,MAAMJ,MACZ,EAAKI,MAAMH,UACvB,EAAKO,SAAS,CACZP,SAAU,EAAKG,MAAMJ,S,EAM3BU,UAAY,WACV,EAAKN,MAAMC,SAASM,KAAK,SAACC,EAAEC,GAAH,MAAS,GAAMC,KAAKC,Y,EAI/CvB,UAAY,SAAAwB,GACVA,EAAMC,iBAKN,IAAMC,EAAYF,EAAMG,OAAO1B,IAG3B2B,EAAY,EAAKhB,MAAME,QAAQe,QAAQH,GAE3CI,QAAQC,IAAIH,IAGM,IAAfA,EACD,EAAKZ,SAAS,CACdF,QAAS,EAAKF,MAAME,QAAQkB,OAAON,GACnClB,MAAO,EAAKI,MAAMJ,MAAO,KAEzB,EAAKS,SACL,EAAKF,SAGP,EAAKG,a,wEAIG,IAAD,OAEP,OADAY,QAAQC,IAAI,YAAcE,KAAKrB,MAAME,SAEnC,oCACE,kBAAC,EAAD,CACAN,MAAOyB,KAAKrB,MAAMJ,MAClBC,SAAUwB,KAAKrB,MAAMH,WACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,KACGwB,KAAKrB,MAAMC,SAASqB,IAAI,SAAAC,GAAO,OAChC,kBAAC,EAAD,CACEnC,UAAW,EAAKA,UAChBE,GAAIiC,EAAQjC,GACZkC,IAAKD,EAAQjC,GACbE,MAAO+B,EAAQ/B,gB,GA3ETiC,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ba0b1320.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// import picture from './picture1.png';\n\nfunction Picture(props) {\n  return (\n    <div className=\"card\" onClick={props.userClick}>\n        <img alt={props.id} src={props.image} />\n    </div>\n  );\n}\n\nexport default Picture;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction NavBar(props) {\n\n  return (\n    <nav className=\"navbar navbar-dark sticky-top\">\n      <h1 className=\"title\">Pokémon Clicky Game</h1>\n      <h1 className=\"score\">Score: {props.score} | Top Score: {props.topScore}</h1>\n    </nav>);\n}\n\nexport default NavBar;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Pokémon Clicky Game!</h1>\r\n                <p className=\"lead\">Click on an image! Try not to click on any Pokémon more than once.</p>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport Picture from \"./components/Picture\";\nimport Wrapper from \"./components/Wrapper\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport pokemons from \"./pokemon.json\";\n\nclass App extends Component {\n  // set the initial state\n  state = {\n    pokemons,\n    clicked: [],\n    score: 0,\n    topScore: 0\n\n  };\n  \n  // resets everything\n  reset = () => {\n    this.setState({\n      score: 0,\n      clicked: []\n    })\n  }\n\n  // sets topScore\n  setTop = () => {\n    let newScore = this.state.score;\n    if(newScore > this.state.topScore){\n      this.setState({\n        topScore: this.state.score\n      })\n    }\n  }\n\n  // randomize the pokemon array\n  randomize = () => {\n    this.state.pokemons.sort((a,b) => 0.5 - Math.random());\n  }\n\n  // this is what happens when the user clicks on a picture\n  userClick = event => {\n    event.preventDefault();\n\n    // console.log(\"guessed: \" + this.state.clicked);\n\n    // gets the alt attribute from the image and saves it to a variable\n    const clickedOn = event.target.alt;\n\n    // if the picture is not in the clicked array, it brings back a -1\n    let inGuessed = this.state.clicked.indexOf(clickedOn);\n\n    console.log(inGuessed);\n\n    // if its -1, it updates the score else it resets the score to 0 and click to blank\n    if(inGuessed === -1){\n      this.setState({\n      clicked: this.state.clicked.concat(clickedOn),\n      score: this.state.score +1});\n    } else{\n      this.setTop();\n      this.reset();\n    }\n\n    this.randomize();\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    console.log(\"guessed: \" + this.state.clicked);\n    return (\n      <>\n        <NavBar \n        score={this.state.score} \n        topScore={this.state.topScore}/>\n        <Header />\n        <Wrapper>\n          {this.state.pokemons.map(pokemon => (\n          <Picture\n            userClick={this.userClick}\n            id={pokemon.id}\n            key={pokemon.id}\n            image={pokemon.image}\n          />\n          ))}\n        </Wrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}